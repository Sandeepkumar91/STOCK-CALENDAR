{"ast":null,"code":"import _objectSpread from \"/Users/sandeep/Desktop/stock-calender/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/* eslint no-fallthrough: off */\nimport dateMath from 'date-arithmetic';\nvar MILLI = {\n  seconds: 1000,\n  minutes: 1000 * 60,\n  hours: 1000 * 60 * 60,\n  day: 1000 * 60 * 60 * 24\n};\nvar MONTHS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\nvar dates = _objectSpread({}, dateMath, {\n  monthsInYear: function monthsInYear(year) {\n    var date = new Date(year, 0, 1);\n    return MONTHS.map(function (i) {\n      return dates.month(date, i);\n    });\n  },\n  firstVisibleDay: function firstVisibleDay(date, localizer) {\n    var firstOfMonth = dates.startOf(date, 'month');\n    return dates.startOf(firstOfMonth, 'week', localizer.startOfWeek());\n  },\n  lastVisibleDay: function lastVisibleDay(date, localizer) {\n    var endOfMonth = dates.endOf(date, 'month');\n    return dates.endOf(endOfMonth, 'week', localizer.startOfWeek());\n  },\n  visibleDays: function visibleDays(date, localizer) {\n    var current = dates.firstVisibleDay(date, localizer),\n        last = dates.lastVisibleDay(date, localizer),\n        days = [];\n\n    while (dates.lte(current, last, 'day')) {\n      days.push(current);\n      current = dates.add(current, 1, 'day');\n    }\n\n    return days;\n  },\n  ceil: function ceil(date, unit) {\n    var floor = dates.startOf(date, unit);\n    return dates.eq(floor, date) ? floor : dates.add(floor, 1, unit);\n  },\n  range: function range(start, end) {\n    var unit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'day';\n    var current = start,\n        days = [];\n\n    while (dates.lte(current, end, unit)) {\n      days.push(current);\n      current = dates.add(current, 1, unit);\n    }\n\n    return days;\n  },\n  merge: function merge(date, time) {\n    if (time == null && date == null) return null;\n    if (time == null) time = new Date();\n    if (date == null) date = new Date();\n    date = dates.startOf(date, 'day');\n    date = dates.hours(date, dates.hours(time));\n    date = dates.minutes(date, dates.minutes(time));\n    date = dates.seconds(date, dates.seconds(time));\n    return dates.milliseconds(date, dates.milliseconds(time));\n  },\n  eqTime: function eqTime(dateA, dateB) {\n    return dates.hours(dateA) === dates.hours(dateB) && dates.minutes(dateA) === dates.minutes(dateB) && dates.seconds(dateA) === dates.seconds(dateB);\n  },\n  isJustDate: function isJustDate(date) {\n    return dates.hours(date) === 0 && dates.minutes(date) === 0 && dates.seconds(date) === 0 && dates.milliseconds(date) === 0;\n  },\n  duration: function duration(start, end, unit, firstOfWeek) {\n    if (unit === 'day') unit = 'date';\n    return Math.abs(dates[unit](start, undefined, firstOfWeek) - dates[unit](end, undefined, firstOfWeek));\n  },\n  diff: function diff(dateA, dateB, unit) {\n    if (!unit || unit === 'milliseconds') return Math.abs(+dateA - +dateB); // the .round() handles an edge case\n    // with DST where the total won't be exact\n    // since one day in the range may be shorter/longer by an hour\n\n    return Math.round(Math.abs(+dates.startOf(dateA, unit) / MILLI[unit] - +dates.startOf(dateB, unit) / MILLI[unit]));\n  },\n  total: function total(date, unit) {\n    var ms = date.getTime(),\n        div = 1;\n\n    switch (unit) {\n      case 'week':\n        div *= 7;\n\n      case 'day':\n        div *= 24;\n\n      case 'hours':\n        div *= 60;\n\n      case 'minutes':\n        div *= 60;\n\n      case 'seconds':\n        div *= 1000;\n    }\n\n    return ms / div;\n  },\n  week: function week(date) {\n    var d = new Date(date);\n    d.setHours(0, 0, 0);\n    d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n    return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7);\n  },\n  today: function today() {\n    return dates.startOf(new Date(), 'day');\n  },\n  yesterday: function yesterday() {\n    return dates.add(dates.startOf(new Date(), 'day'), -1, 'day');\n  },\n  tomorrow: function tomorrow() {\n    return dates.add(dates.startOf(new Date(), 'day'), 1, 'day');\n  }\n});\n\nexport default dates;","map":{"version":3,"sources":["/Users/sandeep/Desktop/stock-calender/src/dates.js"],"names":["dateMath","MILLI","seconds","minutes","hours","day","MONTHS","dates","monthsInYear","year","date","Date","map","i","month","firstVisibleDay","localizer","firstOfMonth","startOf","startOfWeek","lastVisibleDay","endOfMonth","endOf","visibleDays","current","last","days","lte","push","add","ceil","unit","floor","eq","range","start","end","merge","time","milliseconds","eqTime","dateA","dateB","isJustDate","duration","firstOfWeek","Math","abs","undefined","diff","round","total","ms","getTime","div","week","d","setHours","setDate","getDate","getDay","getFullYear","today","yesterday","tomorrow"],"mappings":"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","sourcesContent":["/* eslint no-fallthrough: off */\nimport dateMath from 'date-arithmetic'\n\nconst MILLI = {\n  seconds: 1000,\n  minutes: 1000 * 60,\n  hours: 1000 * 60 * 60,\n  day: 1000 * 60 * 60 * 24,\n}\n\nconst MONTHS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n\nlet dates = {\n  ...dateMath,\n\n  monthsInYear(year) {\n    let date = new Date(year, 0, 1)\n\n    return MONTHS.map(i => dates.month(date, i))\n  },\n\n  firstVisibleDay(date, localizer) {\n    let firstOfMonth = dates.startOf(date, 'month')\n\n    return dates.startOf(firstOfMonth, 'week', localizer.startOfWeek())\n  },\n\n  lastVisibleDay(date, localizer) {\n    let endOfMonth = dates.endOf(date, 'month')\n\n    return dates.endOf(endOfMonth, 'week', localizer.startOfWeek())\n  },\n\n  visibleDays(date, localizer) {\n    let current = dates.firstVisibleDay(date, localizer),\n      last = dates.lastVisibleDay(date, localizer),\n      days = []\n\n    while (dates.lte(current, last, 'day')) {\n      days.push(current)\n      current = dates.add(current, 1, 'day')\n    }\n\n    return days\n  },\n\n  ceil(date, unit) {\n    let floor = dates.startOf(date, unit)\n\n    return dates.eq(floor, date) ? floor : dates.add(floor, 1, unit)\n  },\n\n  range(start, end, unit = 'day') {\n    let current = start,\n      days = []\n\n    while (dates.lte(current, end, unit)) {\n      days.push(current)\n      current = dates.add(current, 1, unit)\n    }\n\n    return days\n  },\n\n  merge(date, time) {\n    if (time == null && date == null) return null\n\n    if (time == null) time = new Date()\n    if (date == null) date = new Date()\n\n    date = dates.startOf(date, 'day')\n    date = dates.hours(date, dates.hours(time))\n    date = dates.minutes(date, dates.minutes(time))\n    date = dates.seconds(date, dates.seconds(time))\n    return dates.milliseconds(date, dates.milliseconds(time))\n  },\n\n  eqTime(dateA, dateB) {\n    return (\n      dates.hours(dateA) === dates.hours(dateB) &&\n      dates.minutes(dateA) === dates.minutes(dateB) &&\n      dates.seconds(dateA) === dates.seconds(dateB)\n    )\n  },\n\n  isJustDate(date) {\n    return (\n      dates.hours(date) === 0 &&\n      dates.minutes(date) === 0 &&\n      dates.seconds(date) === 0 &&\n      dates.milliseconds(date) === 0\n    )\n  },\n\n  duration(start, end, unit, firstOfWeek) {\n    if (unit === 'day') unit = 'date'\n    return Math.abs(\n      dates[unit](start, undefined, firstOfWeek) -\n        dates[unit](end, undefined, firstOfWeek)\n    )\n  },\n\n  diff(dateA, dateB, unit) {\n    if (!unit || unit === 'milliseconds') return Math.abs(+dateA - +dateB)\n\n    // the .round() handles an edge case\n    // with DST where the total won't be exact\n    // since one day in the range may be shorter/longer by an hour\n    return Math.round(\n      Math.abs(\n        +dates.startOf(dateA, unit) / MILLI[unit] -\n          +dates.startOf(dateB, unit) / MILLI[unit]\n      )\n    )\n  },\n\n  total(date, unit) {\n    let ms = date.getTime(),\n      div = 1\n\n    switch (unit) {\n      case 'week':\n        div *= 7\n      case 'day':\n        div *= 24\n      case 'hours':\n        div *= 60\n      case 'minutes':\n        div *= 60\n      case 'seconds':\n        div *= 1000\n    }\n\n    return ms / div\n  },\n\n  week(date) {\n    var d = new Date(date)\n    d.setHours(0, 0, 0)\n    d.setDate(d.getDate() + 4 - (d.getDay() || 7))\n    return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7)\n  },\n\n  today() {\n    return dates.startOf(new Date(), 'day')\n  },\n\n  yesterday() {\n    return dates.add(dates.startOf(new Date(), 'day'), -1, 'day')\n  },\n\n  tomorrow() {\n    return dates.add(dates.startOf(new Date(), 'day'), 1, 'day')\n  },\n}\n\nexport default dates\n"]},"metadata":{},"sourceType":"module"}